<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cart</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        line-height: 1.6;
      }
      table {
        width: 100%;
        border-collapse: collapse;
      }
      table,
      th,
      td {
        border: 1px solid #ddd;
        padding: 8px;
      }
      th {
        background-color: #f2f2f2;
      }

      img {
        max-width: 50px;
        max-height: 50px;
        object-fit: cover;
      }
      .cart-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
      }
      .button-container {
        margin-top: 20px;
        display: flex;
        gap: 10px;
      }
      .button-container button {
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }
      .checkout-btn {
        background-color: #4caf50;
        color: white;
      }
      .back-to-products-btn {
        background-color: #2196f3;
        color: white;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Your Cart</h1>
      <table>
        <thead>
          <tr>
            <th>Product</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody id="cart-items">
          <!-- Sản phẩm sẽ được thêm tại đây bằng JavaScript -->
        </tbody>
      </table>
      <h2 id="cart-total">Total: $0</h2>
      <div class="button-container">
        <button class="checkout-btn" onclick="checkout()">Checkout</button>
        <button class="back-to-products-btn" onclick="backToProducts()">
          Back to Products
        </button>
      </div>
    </div>

    <script>
      function backToProducts() {
        window.location.href = "/products";
      }

      function loadCart() {
        fetch("/cart/items", {
          // Chú ý thay đổi endpoint
          method: "GET",
          credentials: "include",
          headers: {
            Accept: "application/json",
          },
        })
          .then((response) => {
            if (!response.ok) {
              if (response.status === 401) {
                window.location.href = "/login";
                return;
              }
              throw new Error("Network response was not ok");
            }
            return response.json();
          })
          .then((data) => {
            const cartItemsContainer = document.getElementById("cart-items");
            const cartTotal = document.getElementById("cart-total");

            let total = 0;
            cartItemsContainer.innerHTML = "";

            data.items.forEach((item) => {
              const product = item.Product;
              const quantity = item.quantity;
              const price = parseFloat(product.price);

              const itemTotal = price * quantity;
              total += itemTotal;

              cartItemsContainer.innerHTML += `
              <tr>
                <td>
                  ${
                    product.image
                      ? `<img src="${product.image}" alt="${product.name}">`
                      : ""
                  }
                  ${product.name}
                </td>
                <td>$${price.toFixed(2)}</td>
                <td>
                  <input 
                    type="number" 
                    min="1"
                    value="${quantity}" 
                    onchange="updateQuantity('${product.id}', this.value)" 
                  />
                </td>
                <td>$${itemTotal.toFixed(2)}</td>
                <td>
                  <button onclick="removeFromCart('${
                    product.id
                  }')">Remove</button>
                </td>
              </tr>
            `;
            });

            cartTotal.textContent = `Total: $${total.toFixed(2)}`;
          })
          .catch((error) => {
            console.error("Error loading cart:", error);
            alert("Failed to load cart. Please try again.");
          });
      }

      function updateQuantity(productId, quantity) {
        fetch(`/cart/update/${productId}`, {
          method: "PATCH",
          credentials: "include",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ quantity: parseInt(quantity, 10) }),
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            loadCart();
          })
          .catch((error) => {
            console.error("Error updating cart:", error);
            alert("Failed to update cart. Please try again.");
          });
      }

      function removeFromCart(productId) {
        fetch(`/cart/remove/${productId}`, {
          method: "DELETE",
          credentials: "include",
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            loadCart();
          })
          .catch((error) => {
            console.error("Error removing from cart:", error);
            alert("Failed to remove item from cart. Please try again.");
          });
      }

      function checkout() {
        fetch("/orders/create", {
          method: "POST",
          credentials: "include",
          headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
          },
        })
          .then((response) => {
            console.log("Response status:", response.status);
            return response.json();
          })
          .then((data) => {
            console.log("Checkout response:", data);

            if (data.success) {
              if (data.redirectUrl) {
                window.location.href = data.redirectUrl;
              } else {
                alert(data.message);
                loadCart();
              }
            } else {
              alert(data.message || "Checkout failed");
            }
          })
          .catch((error) => {
            console.error("Checkout error:", error);
            alert("Checkout failed. Please try again.");
          });
      }
      // Load cart when page loads
      document.addEventListener("DOMContentLoaded", loadCart);
    </script>
  </body>
</html>
