<!DOCTYPE html>
<html>
  <head>
    <title>3TGStore | Products</title>
    <link rel="stylesheet" href="/css/styles.css" />
    <link rel="icon" href="/images/favicon.ico">
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
    />
    <style>
      .cart-count {
        background-color: red;
        color: white;
        border-radius: 50%;
        padding: 2px 8px;
        font-size: 12px;
        position: relative;
        top: -10px;
        left: -10px;
      }
      .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
      }
      
      .page-link {
        margin: 0 5px;
        padding: 5px 10px;
        border: 1px solid #ddd;
        text-decoration: none;
        color: #333;
      }
      
      .page-link.active {
        background-color: #007bff;
        color: white;
      }
    </style>
  </head>
  <body>
    <nav class="nav">
      <a href="/" class="logo">
        <i class="fas fa-store"></i>
        <span>3TGStore</span>
      </a>
      <div class="left-links">
        <a href="/" class="nav-link">
          <i class="fas fa-home"></i>
          <span>Home</span>
        </a>
        <a href="/products" class="nav-link active">
          <i class="fas fa-box"></i>
          <span>Products</span>
        </a>
        <a href="/categories" class="nav-link">
          <i class="fas fa-th-large"></i>
          <span>Categories</span>
        </a>
        <a href="/users/me" class="nav-link">
          <i class="fas fa-user"></i>
          <span>Account</span>
        </a>
      </div>
      <div class="right-links">
        <a href="/cart" class="cart-link">
          <i class="fas fa-shopping-cart"></i>
          <span id="cart-count" class="cart-count">0</span>
        </a>
        <a href="/users/logout" class="cart-link" onclick="return confirm('Are you sure you want to logout?');">
          <i class="fas fa-sign-out-alt"></i>
          <span>Logout</span>
        </a>
      </div>
    </nav>

    <div class="filter-search">
      <form action="/products" method="GET" class="filter-form" id="filterForm">
        <div class="filter-row">
          <div class="search-group">
            <i class="fas fa-search search-icon"></i>
            <input
              type="text"
              name="name"
              placeholder="Search by name or description..."
              class="search-input"
              value="<%= name || '' %>"
            />
          </div>

          <select name="category" class="filter-select">
            <option value="">All Category</option>
            <% ['Sport Gear', 'Electronics', 'Fashion', 'Book'].forEach(cat => { %>
              <option value="<%= cat %>" <%= category === cat ? 'selected' : '' %>><%= cat %></option>
            <% }) %>
          </select>

          <div class="price-group">
            <input
              type="number"
              name="minPrice"
              placeholder="Min $"
              class="price-input"
              value="<%= minPrice || '' %>"
            />
            <span class="price-separator">-</span>
            <input
              type="number"
              name="maxPrice"
              placeholder="Max $"
              class="price-input"
              value="<%= maxPrice || '' %>"
            />
          </div>

          <select name="sort" class="filter-select">
            <option value="asc" <%= sort === 'asc' ? 'selected' : '' %>>Price ↑</option>
            <option value="desc" <%= sort === 'desc' ? 'selected' : '' %>>Price ↓</option>
          </select>
        </div>
      </form>
    </div>

    <div class="container">
      <div class="card">
        <h1>Products</h1>
        <a href="/products/new" class="button">
          <i class="fas fa-plus"></i> Add New Product
        </a>
      </div>
      <div class="products" id="productContainer">
        <% if (products.length > 0) { %> <% products.forEach(product => { %>
        <div class="product card">
          <% if (product.image) { %>
          <img
            src="<%= product.image %>"
            alt="<%= product.name %>"
            class="product-image"
          />
          <% } else { %>
          <img
            src="/images/default.jpg"
            alt="Default Image"
            class="product-image"
          />
          <% } %>
          <h2><%= product.name %></h2>
          <p>Brand: <%= product.brand %></p>
          <p>Category: <%= product.category%></p>
          <p>Description: <%= product.description %></p>
          <p class="price">Price: $<%= product.price %></p>
          <div class="button-group">
            <a href="/products/<%= product.id %>" class="button">
              <i class="fas fa-eye"></i> View
            </a>
            <form
              action="/products/<%= product.id %>/delete"
              method="POST"
              style="display: inline"
              onsubmit="return confirm('Are you sure you want to delete this product?');"
            >
              <button type="submit" class="button delete-button">
                <i class="fas fa-trash"></i>
              </button>
            </form>
            <button class="button add-to-cart-button" 
              onclick="addToCart('<%= product.id %>', '<%= product.name %>', '<%= product.price %>')">
              <i class="fas fa-cart-plus"></i> Add to Cart
            </button>
          </div>
        </div>
        <% }) %> <% } else { %>
        <p>No products found.</p>
        <% } %>
      </div>

      <div class="pagination">
        <% 
        const queryParams = {...originalQuery}; 
        delete queryParams.page; // Xóa page cũ 
        const queryString = new URLSearchParams(queryParams).toString();
        %>

        <% if (currentPage > 1) { %>
          <a href="/products?page=<%= currentPage - 1 %><%= queryString ? '&' + queryString : '' %>" class="page-link">Previous</a>
        <% } %>

        <% for(let i = 1; i <= totalPages; i++) { %>
          <a href="/products?page=<%= i %><%= queryString ? '&' + queryString : '' %>" 
            class="page-link <%= currentPage === i ? 'active' : '' %>">
            <%= i %>
          </a>
        <% } %>

        <% if (currentPage < totalPages) { %>
          <a href="/products?page=<%= currentPage + 1 %><%= queryString ? '&' + queryString : '' %>" class="page-link">Next</a>
        <% } %>
      </div>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('filterForm');
        const inputs = form.querySelectorAll('input, select');
      
        function updateProductList(url) {
          fetch(url, {
            method: 'GET',
            headers: {
              'X-Requested-With': 'XMLHttpRequest',
            }
          })
          .then(response => response.json())
          .then(data => {
            const productContainer = document.getElementById('productContainer');
            productContainer.innerHTML = ''; // Xóa sản phẩm cũ
      
            data.products.forEach(product => {
              const productElement = document.createElement('div');
                  productElement.className = 'product card';
                  productElement.innerHTML = `
                    <img src="${product.image || '/images/default.jpg'}" alt="${product.name}" class="product-image" />
                    <h2>${product.name}</h2>
                    <p>Brand: ${product.brand}</p>
                    <p>Category: ${product.category}</p>
                    <p>Description: ${product.description}</p>
                    <p class="price">Price: $${product.price}</p>
                    <div class="button-group">
                      <a href="/products/${product.id}" class="button">
                        <i class="fas fa-eye"></i> View
                      </a>
                      <form action="/products/${product.id}/delete" method="POST" style="display: inline" onsubmit="return confirm('Are you sure you want to delete this product?');">
                        <button type="submit" class="button delete-button">
                          <i class="fas fa-trash"></i>
                        </button>
                      </form>
                      <button class="button add-to-cart-button" onclick="addToCart('${product.id}', '${product.name}', '${product.price}')">
                        <i class="fas fa-cart-plus"></i> Add to Cart
                      </button>
                    </div>
                  `;
                  productContainer.appendChild(productElement);
            });
      
            renderPagination(data);
          })
          .catch(error => console.error('Error fetching products:', error));
        }
      
        function renderPagination(data) {
          const paginationContainer = document.createElement('div');
          paginationContainer.className = 'pagination';
      
          if (data.currentPage > 1) {
            const prevLink = document.createElement('a');
            prevLink.href = `/products?page=${data.currentPage - 1}`;
            prevLink.textContent = 'Previous';
            prevLink.className = 'page-link';
            prevLink.addEventListener('click', function(e) {
              e.preventDefault();
              updateProductList(this.href);
            });
            paginationContainer.appendChild(prevLink);
          }
      
          for (let i = 1; i <= data.totalPages; i++) {
            const pageLink = document.createElement('a');
            pageLink.href = `/products?page=${i}`;
            pageLink.textContent = i;
            pageLink.className = `page-link ${data.currentPage === i ? 'active' : ''}`;
            pageLink.addEventListener('click', function(e) {
              e.preventDefault();
              updateProductList(this.href);
            });
            paginationContainer.appendChild(pageLink);
          }
      
          if (data.currentPage < data.totalPages) {
            const nextLink = document.createElement('a');
            nextLink.href = `/products?page=${data.currentPage + 1}`;
            nextLink.textContent = 'Next';
            nextLink.className = 'page-link';
            nextLink.addEventListener('click', function(e) {
              e.preventDefault();
              updateProductList(this.href);
            });
            paginationContainer.appendChild(nextLink);
          }
      
          const existingPagination = document.querySelector('.pagination');
          if (existingPagination) {
            existingPagination.replaceWith(paginationContainer);
          } else {
            document.querySelector('.container').appendChild(paginationContainer);
          }
        }
      
        inputs.forEach(input => {
          input.addEventListener('change', function(event) {
            event.preventDefault();
      
            const formData = new FormData(form);
            const params = new URLSearchParams(formData).toString();
            const url = `/products?${params}`;
      
            updateProductList(url);
          });
        });
      });
    </script>

    <script>
      let cart = JSON.parse(localStorage.getItem("cart")) || [];
    
      function updateCartCount() {
        fetch('/cart/count', {
          method: 'GET',
          credentials: 'include',
          headers: {
            'Accept': 'application/json'
          }
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          const cartCount = document.getElementById("cart-count");
          cartCount.textContent = data.totalQuantity || 0;
        })
        .catch(error => {
          console.error('Error fetching cart count:', error);
          const cartCount = document.getElementById("cart-count");
          cartCount.textContent = '0';
        });
      }

      function addToCart(id, name, price) {
        fetch('/cart/add', {
          method: 'POST',
          credentials: 'include', // Quan trọng để gửi cookie session
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ 
            productId: id, 
            quantity: 1 
          })
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          updateCartCount();
          
          alert("Product added to cart successfully!");
        })
        .catch(error => {
          console.error('Error:', error);
          alert("Failed to add product to cart");
        });
      }
    
      document.addEventListener("DOMContentLoaded", updateCartCount);
    </script>
  </body>
</html>
